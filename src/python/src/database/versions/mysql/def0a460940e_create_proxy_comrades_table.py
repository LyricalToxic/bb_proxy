"""create proxy_comrades table

Revision ID: def0a460940e
Revises: 922d0d31b7bb
Create Date: 2022-12-23 20:47:02.033839

"""
import sqlalchemy as sa
from alembic import op

from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'def0a460940e'
down_revision = '922d0d31b7bb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('proxy_comrades',
                    sa.Column('id', mysql.BIGINT(unsigned=True), autoincrement=True, nullable=False),
                    sa.Column('proxy_credential_id', mysql.BIGINT(unsigned=True), nullable=False),
                    sa.Column('comrade_id', mysql.BIGINT(unsigned=True), nullable=False),
                    sa.Column('bandwidth_limit_b', mysql.BIGINT(), server_default=sa.text('1024'), nullable=False),
                    sa.Column('concurrency_threads_limit', mysql.BIGINT(), server_default=sa.text('1'), nullable=False),
                    sa.Column('used_bandwidth_b', mysql.BIGINT(unsigned=True), server_default=sa.text('0'),
                              nullable=False),
                    sa.Column('rotate_strategy', mysql.SMALLINT(unsigned=True), server_default=sa.text('0'),
                              nullable=False),
                    sa.Column('status', mysql.MEDIUMINT(unsigned=True), server_default=sa.text('0'), nullable=False),
                    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'),
                              nullable=False),
                    sa.Column('updated_at', mysql.TIMESTAMP(),
                              server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_proxy_comrades'))
                    )
    with op.batch_alter_table('proxy_comrades', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_proxy_comrades_bandwidth_limit_b_proxy_comrades_concurrency_threads_limit'),
            ['bandwidth_limit_b', 'concurrency_threads_limit'], unique=False)
        batch_op.create_index(batch_op.f('ix_proxy_comrades_comrade_id'), ['comrade_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_proxy_comrades_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_proxy_comrades_proxy_credential_id'), ['proxy_credential_id'],
                              unique=False)
        batch_op.create_index(batch_op.f('ix_proxy_comrades_proxy_credential_id_proxy_comrades_comrade_id'),
                              ['proxy_credential_id', 'comrade_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_proxy_comrades_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_proxy_comrades_updated_at'), ['updated_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('proxy_comrades', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_proxy_comrades_updated_at'))
        batch_op.drop_index(batch_op.f('ix_proxy_comrades_status'))
        batch_op.drop_index(batch_op.f('ix_proxy_comrades_proxy_credential_id_proxy_comrades_comrade_id'))
        batch_op.drop_index(batch_op.f('ix_proxy_comrades_proxy_credential_id'))
        batch_op.drop_index(batch_op.f('ix_proxy_comrades_created_at'))
        batch_op.drop_index(batch_op.f('ix_proxy_comrades_comrade_id'))
        batch_op.drop_index(batch_op.f('ix_proxy_comrades_bandwidth_limit_b_proxy_comrades_concurrency_threads_limit'))

    op.drop_table('proxy_comrades')
    # ### end Alembic commands ###
