"""create statistic table

Revision ID: 680a9c8176f8
Revises: bb7306ee2f04
Create Date: 2022-03-28 15:07:32.602308

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '680a9c8176f8'
down_revision = 'bb7306ee2f04'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('statistics',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('proxy_comrade_limit_id', sa.INTEGER(), nullable=False),
                    sa.Column('from_timestamp', sa.TIMESTAMP(), nullable=False,
                              server_default=sa.text('(CURRENT_TIMESTAMP)')),
                    sa.Column('to_timestamp', sa.TIMESTAMP(), nullable=False,
                              server_default=sa.text('(CURRENT_TIMESTAMP)')),
                    sa.Column('trigger', sa.VARCHAR(length=255), nullable=False),
                    sa.Column('number_of_requests', sa.INTEGER(), server_default=sa.text('0'), nullable=False),
                    sa.Column('upload_traffic_bytes', sa.INTEGER(), server_default=sa.text('0'), nullable=False),
                    sa.Column('number_of_responses', sa.INTEGER(), server_default=sa.text('0'), nullable=False),
                    sa.Column('download_traffic_bytes', sa.INTEGER(), server_default=sa.text('0'), nullable=False),
                    sa.Column('total_traffic_bytes', sa.INTEGER(), server_default=sa.text('0'), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('proxy_comrade_limit_id', 'from_timestamp', 'to_timestamp', 'trigger')
                    )
    op.create_index('from_timestamp', 'statistics', ['to_timestamp', 'trigger'], unique=False)
    op.create_index(op.f('ix_statistics_from_timestamp'), 'statistics', ['from_timestamp'], unique=False)
    op.create_index(op.f('ix_statistics_proxy_comrade_limit_id'), 'statistics', ['proxy_comrade_limit_id'],
                    unique=False)
    op.create_index(op.f('ix_statistics_to_timestamp'), 'statistics', ['to_timestamp'], unique=False)
    op.create_index(op.f('ix_statistics_updated_at'), 'statistics', ['updated_at'], unique=False)
    op.execute(
        "CREATE TRIGGER IF NOT EXISTS UpdateOnCurrentTimestamp3 AFTER UPDATE ON statistics "
        "BEGIN "
        "UPDATE statistics set updated_at=CURRENT_TIMESTAMP WHERE id=id; "
        "END;"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_statistics_updated_at'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_to_timestamp'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_proxy_comrade_limit_id'), table_name='statistics')
    op.drop_index(op.f('ix_statistics_from_timestamp'), table_name='statistics')
    op.drop_index('from_timestamp', table_name='statistics')
    op.drop_table('statistics')
    # ### end Alembic commands ###
